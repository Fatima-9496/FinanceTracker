@model FinanceTracker.Models.Category

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Category</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CatBudget" class="control-label"></label>
                <input asp-for="CatBudget" class="form-control" />
                <span asp-validation-for="CatBudget" class="text-danger"></span>
            </div>
            <p>Total Current Amount: <strong>@TempData["TotalCurrentAmount"]</strong></p>
            <input type="hidden" id="TotalCurrentAmount" value="@TempData["TotalCurrentAmount"]" />
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>
<script>
    document.getElementById("budgetForm").addEventListener("submit", function (event) {
        var catBudget = parseFloat(document.getElementById("CatBudget").value);
        var totalCurrentAmount = parseFloat(document.getElementById("TotalCurrentAmount").value); // Use hidden input

        if (catBudget > totalCurrentAmount) {
            alert("The entered budget amount cannot exceed the total current amount (" + totalCurrentAmount + ").");
            event.preventDefault(); // Prevent form submission
        }
    });
    
    </script>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

}
